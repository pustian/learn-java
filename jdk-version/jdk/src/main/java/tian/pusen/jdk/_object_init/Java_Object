
  1 传递参数。 都是值传递---也就是复制值传入参数。
               由于对象都是引用所以实际值传递的是引用的地址
  
  2 方法的可变参数  实际上是传入数组，数组大小不固定。所以只能有一类型惨
  
  3 重载构造方法使用 this可以避免代码多次重写，方便以后使用也可以使用static方法进行公共代码集中
    子类中 super调用父类的方法和变量
  
  4 初始化块，静态块，初始化顺序
      父类--静态变量 父类--静态初始化块
      子类--静态变量 子类--静态初始化块
      --- 子类main方法 --- new 子类
      父类--变量 父类--初始化块 父类--构造器
      子类--变量 子类--初始化块 子类--构造器
  5 JVM 第一次主动使用某个类时，系统在准备阶段为该类静态成员变量分配内存。 
    初始化阶段负责初始化静态成员变量，执行初始化代码或是类成员变量变量时指定的初始值。
    执行顺序与源代码中排序一致

  6 自动包装类，注意比较 == 为对象比较 

  7 "hello" 直接常量存储在常量池中
    new String("hello") 从常量池中获取常量，然后新构建对象存储在堆栈中
    常量池(const pool）专门用于管理编译时被确定并被保存在已编译的.class文件中的一些数据
          包括 关于类，方法，接口中的长敛还包括字符串常量

  8 instanceof 和 obj.getClass() == XXX.class 对比

  
  9 抽象类

  10 内部类
     作用：内部类隐藏在外部类内，不允许其他类访问该类
           内部类可以访问外部类的私有数据
           匿名内部类适用于创建那写仅需要一次使用的类
     1） 非静态内部类   不能拥有静态成员
     2) （静态）内部类
     3) 局部内部类  有效区间在函数范围内
     4) 匿名内部类  new 实现接口()|父类构造器(参数列表){ //匿名类内部实体部分（一般为重载的方法） }
  
     
